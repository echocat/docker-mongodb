#!/bin/bash

. "`dirname \"${0}\"`/common"

checkForExecutable git
checkForExecutable docker
checkForExecutable find

currentBranch="`git branch | grep \"^\* \" | sed 's/^\* //g'`"
if [ -z "${currentBranch}" ]; then
	fail "Could not determinate current branch."
fi

execute rm -f "${BUILD_DIRECTORY}/version"
execute rm -f "${BUILD_DIRECTORY}/mongodb-version"
execute rm -f "${BUILD_DIRECTORY}/buildroot-version"

if echo "${currentBranch}" | grep 'v[0-9][0-9]*\(\.[0-9][0-9]*\)*' > /dev/null; then
	log info "Current branch: ${currentBranch}"
	execute mkdir -p "${BUILD_DIRECTORY}"
	execute echo "${currentBranch}" | sed 's/^v//g' > "${BUILD_DIRECTORY}/version"
	execute cp -f "${BUILD_DIRECTORY}/version" "${BUILD_DIRECTORY}/mongodb-version"
else
	fail "No valid branch name: ${currentBranch}"
fi

dockerDependency="`cat \"${BASE_DIRECTORY}/Dockerfile\" | grep \"^\s*FROM\s\" | sed 's/^\s*FROM\s\(.\{1,\}\)\s*\$/\1/g'`"
if [ -z "${dockerDependency}" ]; then
	fail "Could not determinate docker dependency."
fi

execute docker pull "${dockerDependency}"

execute rm -rf "${BUILD_DIRECTORY}/docker-depedency-image"
execute mkdir -p "${BUILD_DIRECTORY}/docker-depedency-image/root"
execute cd "${BUILD_DIRECTORY}/docker-depedency-image"
execute docker save "${dockerDependency}" | tar -x
execute cd "${BUILD_DIRECTORY}/docker-depedency-image/root"
execute find "${BUILD_DIRECTORY}/docker-depedency-image" -name "layer.tar" -exec tar -xf "{}" \;

execute cp -f "${BUILD_DIRECTORY}/docker-depedency-image/root/usr/lib/sysinfo/echocat/nano/buildroot.version" "${BUILD_DIRECTORY}/buildroot-version"

